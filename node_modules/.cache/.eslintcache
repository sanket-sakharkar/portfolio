[{"C:\\Users\\sanke\\Desktop\\projects\\REACT-PROJECT\\portfolio\\src\\index.js":"1","C:\\Users\\sanke\\Desktop\\projects\\REACT-PROJECT\\portfolio\\src\\App.js":"2","C:\\Users\\sanke\\Desktop\\projects\\REACT-PROJECT\\portfolio\\src\\main.js":"3","C:\\Users\\sanke\\Desktop\\projects\\REACT-PROJECT\\portfolio\\src\\api.js":"4","C:\\Users\\sanke\\Desktop\\projects\\REACT-PROJECT\\portfolio\\src\\component.js":"5"},{"size":200,"mtime":1632294911638,"results":"6","hashOfConfig":"7"},{"size":4055,"mtime":1654957535974,"results":"8","hashOfConfig":"7"},{"size":15269,"mtime":1655038950274,"results":"9","hashOfConfig":"7"},{"size":3615,"mtime":1651214415734,"results":"10","hashOfConfig":"7"},{"size":4711,"mtime":1654969686451,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1mvahh0",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\sanke\\Desktop\\projects\\REACT-PROJECT\\portfolio\\src\\index.js",[],["25","26"],"C:\\Users\\sanke\\Desktop\\projects\\REACT-PROJECT\\portfolio\\src\\App.js",["27","28","29"],"import React, {useEffect,useState} from 'react'\nimport Main from './main'\nimport './style.css'\nimport image from './image2.png'\nimport { headerApi, blogApi, skillsApi, serviceApi, PortfolioApi } from './api'\nimport { Loader } from './component'\nconst uniquePortfolio = [... new Set(PortfolioApi.map((curElem) => {\n  return curElem.category;\n})\n)]\nconst App = () => {\n \n  const [loading,setLoading]=useState(false)\n\n  React.useEffect(() => {\n    setLoading(true)\n    setTimeout(()=>{\n      setLoading(false)\n    }, 40)\n    \n  }, [])\n\n\n  const [portfolioData, setportData] = React.useState(PortfolioApi)\n  const [portfolioList] = React.useState(uniquePortfolio)\n  const [headerData] = React.useState(headerApi)\n  const [blogData] = React.useState(blogApi)\n  const [serviceData, setserviceData] = React.useState(serviceApi)\n  const [skillData] = React.useState(skillsApi)\n  const [isActive, setActive] = useState(false)\n\n  const filterPort = (category) => {\n \n    const updateport = PortfolioApi.filter((curElem) => {\n      \n      return curElem.category === category;\n    })\n    setportData(updateport);\n   setActive(!isActive);\n    if (category === 'all') {\n      setportData(PortfolioApi);\n    }\n  }\n\n\n  const myFunction = () => {\n\n    var r = document.querySelector(':root');\n    var h = document.querySelector('.img-element');\n    // var i = document.getElementById('icon1');\n    // console.log(i);\n\n    // var img = \"http://localhost:3000/img/image2.png\"\n    //function to set properties\n    function setProperty(el, attrs) {\n      for (var key in attrs) {\n        el.style.setProperty(key, attrs[key]);\n      }\n    }\n\n    if (document.getElementById('checkbox').checked) {\n      setProperty(r, { \"--dark-one\": \"#fff\", \"--dark-two\": \"#fff\", \"--main-color\": \"#ff0\", '--light-one': '#000', '--light-two': '#222', '--light-three': '#222' });\n      h.style.backgroundImage = \"url('http://localhost:3000/img/image2.png')\";\n\n      let newArr = [...serviceData];\n      // newArr[0][\"color\"] = 'ffff00';\n      // newArr[1][\"color\"] = 'ffff00';\n      // newArr[2][\"color\"] = 'ffff00';\n      for (let index = 0; index < 3; index++) {\n        newArr[index][\"color\"] = 'ffff00';\n\n      }\n\n      setserviceData(newArr);\n\n    }\n\n\n\n    else if (!document.getElementById('checkbox').checked) {\n      setProperty(r, { \"--dark-one\": \"#333\", \"--dark-two\": \"#7a7a7a\", \"--main-color\": \" #d3491f\", '--light-one': '#fff', '--light-two': '#f9fafb', '--light-three': '#f6f7fb' });\n      h.style.backgroundImage = \"url('http://localhost:3000/img/image.png')\";\n      let newArr = [...serviceData];\n      // newArr[0][\"color\"] = 'ffff00';\n      // newArr[1][\"color\"] = 'ffff00';\n      // newArr[2][\"color\"] = 'ffff00';\n      for (let index = 0; index < 3; index++) {\n        newArr[index][\"color\"] = 'd3491f';\n\n      }\n\n      setserviceData(newArr);\n\n    }\n    // --dark-one: #333;\n    // --dark-two: #7a7a7a;\n    // --main-color: #d3491f;\n    // --light-one: #fff;\n    // --light-two: #f9fafb;\n    // --light-three: #f6f7fb;\n    // {(() => {\n\n    //   var variable =document.getElementById('checkbox')\n\n    //   if(document.getElementById('checkbox').checked){alert(variable)}\n\n    //   })()}\n\n\n  }\n\n\n\n  const hamburger = () => {\n\n    const hamburger_menu = document.querySelector(\".hamburger-menu\");\n    const navbar = document.querySelector(\"header nav\");\n\n    function closeMenu() {\n      navbar.classList.remove(\"open\");\n      document.body.classList.remove(\"stop-scrolling\");\n    }\n\n    hamburger_menu.addEventListener(\"click\", () => {\n      if (!navbar.classList.contains(\"open\")) {\n        navbar.classList.add(\"open\");\n        document.body.classList.add(\"stop-scrolling\");\n      } else {\n        closeMenu();\n      }\n    });\n\n  }\n  return (\n    <>\n{\n    loading ?<Loader /> :\n      <Main portfolioData={portfolioData} portfolioList={portfolioList} headerData={headerData} blogData={blogData} serviceData={serviceData} skillData={skillData} filterPort={filterPort} myFunction={myFunction} hamburger={hamburger} isActive={isActive}/>\n}\n    </>\n  )\n}\n\nexport default App\n\n\n","C:\\Users\\sanke\\Desktop\\projects\\REACT-PROJECT\\portfolio\\src\\main.js",["30","31","32","33","34","35","36","37","38","39","40"],"C:\\Users\\sanke\\Desktop\\projects\\REACT-PROJECT\\portfolio\\src\\api.js",[],"C:\\Users\\sanke\\Desktop\\projects\\REACT-PROJECT\\portfolio\\src\\component.js",["41","42","43"],"import React from 'react'\r\n//loader\r\nconst Loader = () => {\r\n  return (\r\n    <>\r\n      <div className=\"loader\">\r\n        <div class=\"dots\"><span class=\"dot f\"></span><span class=\"dot s\"></span><span class=\"dot l\"></span></div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n// portfolio\r\nconst Portfolio = ({ portfolioData }) => {\r\n  return (\r\n    <>\r\n      {\r\n        portfolioData.map((curElem) => {\r\n          return (\r\n            <>\r\n              <div class=\"grid-item\">\r\n                <div class=\"gallery-image\">\r\n                  <img src={curElem.image} alt=\"\" />\r\n                  <div class=\"img-overlay\">\r\n                    <div class=\"plus\"></div>\r\n                    <div class=\"img-description\">\r\n                      <h3>{curElem.description}</h3>\r\n                      <h5>View Demo</h5>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n// header\r\nconst Header = ({ headerData }) => {\r\n  return (\r\n    <>\r\n      {\r\n        headerData.map((curMenu) => {\r\n          return (\r\n            <>\r\n              <li>\r\n                <a href={'#' + curMenu.menu}>{curMenu.menu}</a>\r\n              </li>\r\n            </>\r\n          )\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n// services\r\nconst Services = ({ serviceData }) => {\r\n\r\n  // var de=document.getElementById('checkbox');\r\n  // console.log(\"sanket\"+de)\r\n  // console.log(myFunction());\r\n  return (\r\n    <>\r\n      {\r\n        serviceData.map((curService) => {\r\n\r\n          return (\r\n            <>\r\n              <div class=\"card-wrap\">\r\n\r\n                {/*<button onClick={()=>myInput()}>click here</button> */}\r\n                <div class=\"card\" data-card={curService.title}>\r\n                  <div class=\"card-content z-index\">\r\n\r\n                    {/* {(()=>{\r\n  myInput();\r\n  // var cd= document.getElementById('checkbox')\r\n  // if(0){\r\n  //   alert('hello');\r\n  // }\r\n  // else{\r\n  //   alert('hell');\r\n  // }\r\n\r\n})()\r\n\r\n} */}\r\n\r\n                    <img src={'https://img.icons8.com/external-justicon-lineal-justicon/6004/' + curService.color + curService.icon} className=\"icon\" alt=\"\" />\r\n                    <h3 class=\"title-sm\">{curService.title}</h3>\r\n                    <p class=\"text\">\r\n                      {curService.description}\r\n                    </p>\r\n                    <a href=\"#\" class=\"btn small\">Read more</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </>\r\n          )\r\n        })\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst PortfolioNav = ({ portfolioList }) => {\r\n  return (\r\n    <>\r\n      {\r\n        portfolioList.map((curElem) => {\r\n          return (\r\n            <>\r\n              <li>\r\n                <a href='#'>{curElem}</a>\r\n              </li>\r\n            </>\r\n          )\r\n        })\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst Blog = ({ blogData }) => {\r\n  return (\r\n    <>\r\n      {\r\n        blogData.map((curBlog) => {\r\n          return (\r\n            <>\r\n              <div class=\"blog-wrap\">\r\n                <div class=\"blog-card\">\r\n                  <div class=\"blog-image\">\r\n                    <img src={curBlog.image} alt=\"\" />\r\n                  </div>\r\n\r\n                  <div class=\"blog-content\">\r\n                    <div class=\"blog-info\">\r\n                      <h5 class=\"blog-date\">{curBlog.date}</h5>\r\n                      <h5 class=\"blog-user\"><i class=\"fas fa-user\"></i>{curBlog.author}</h5>\r\n                    </div>\r\n                    <h3 class=\"title-sm\">{curBlog.title}</h3>\r\n                    <p class=\"blog-text\">\r\n                      {curBlog.description}\r\n                    </p>\r\n                    <a href=\"#\" class=\"btn small\">Read more</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst Skills = ({ skillData }) => {\r\n  return (\r\n    <>\r\n      {\r\n        skillData.map((curSkill) => {\r\n          const { title, progress } = curSkill\r\n          return (\r\n            <>\r\n\r\n              <div class=\"skill html\">\r\n\r\n                <div class=\"skillbox\">\r\n                  <p>{title}</p>\r\n                  <p>{`${progress}%`}</p>\r\n                  <div class=\"skills_outer\">\r\n                    <div class=\"skill_level\" style={{ width: `${progress}%` }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </>\r\n          )\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Experience = () => {\r\n  return (\r\n    <>\r\n      This is Experience\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport { Portfolio, Header, Services, PortfolioNav, Blog, Skills, Experience, Loader }\r\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":16,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":7,"column":29,"nodeType":"55","messageId":"56","endLine":7,"endColumn":30,"fix":"57"},{"ruleId":"48","severity":1,"message":"58","line":2,"column":39,"nodeType":"50","messageId":"51","endLine":2,"endColumn":43},{"ruleId":"48","severity":1,"message":"59","line":2,"column":67,"nodeType":"50","messageId":"51","endLine":2,"endColumn":77},{"ruleId":"60","severity":1,"message":"61","line":107,"column":19,"nodeType":"62","endLine":107,"endColumn":47},{"ruleId":"60","severity":1,"message":"61","line":162,"column":19,"nodeType":"62","endLine":162,"endColumn":47},{"ruleId":"60","severity":1,"message":"61","line":227,"column":19,"nodeType":"62","endLine":227,"endColumn":47},{"ruleId":"60","severity":1,"message":"61","line":319,"column":15,"nodeType":"62","endLine":319,"endColumn":43},{"ruleId":"60","severity":1,"message":"61","line":371,"column":19,"nodeType":"62","endLine":371,"endColumn":55},{"ruleId":"60","severity":1,"message":"61","line":391,"column":21,"nodeType":"62","endLine":391,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":394,"column":21,"nodeType":"62","endLine":394,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":400,"column":21,"nodeType":"62","endLine":400,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":407,"column":19,"nodeType":"62","endLine":407,"endColumn":52},{"ruleId":"60","severity":1,"message":"61","line":99,"column":21,"nodeType":"62","endLine":99,"endColumn":51},{"ruleId":"60","severity":1,"message":"61","line":121,"column":17,"nodeType":"62","endLine":121,"endColumn":29},{"ruleId":"60","severity":1,"message":"61","line":154,"column":21,"nodeType":"62","endLine":154,"endColumn":51},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'image' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"65","text":"66"},"'Blog' is defined but never used.","'Experience' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",[273,274],""]